{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todoId","handleSelect","className","map","todo","cn","id","completed","title","type","onClick","userId","TodoFilter","selectedFilter","handleFilterChange","query","handleClearSearch","handleInput","value","onChange","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleCloseButton","selectedUserId","useState","selectedUser","setSelectedUser","isUserLoaded","setIsUserLoaded","getUserFromServer","a","user","Error","useEffect","href","email","name","App","setTodos","isTodosLoaded","setIsTodosLoaded","idOfSelectedTodo","setIdOfSelectedTodo","setSelectedUserId","setSelectedFilter","setQuery","selectedTodo","find","getTodosFromServer","todosFromServer","visibleTodos","useMemo","filterType","filter","lowerQuery","toLowerCase","lowerTitle","includes","getVisibleTodos","event","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75cc03a2.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  todoId: number;\n  handleSelect: (id: number, userId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  todoId,\n  handleSelect,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={cn(\n              { 'has-background-info-light': todo.id === todoId },\n            )}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleSelect(todo.id, todo.userId)}\n              >\n                <span className=\"icon\">\n                  <i className={cn(\n                    'far',\n                    { 'fa-eye': todo.id !== todoId },\n                    { 'fa-eye-slash': todo.id === todoId },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  selectedFilter: string;\n  query: string;\n  handleClearSearch: () => void;\n  handleFilterChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  handleInput: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectedFilter,\n  handleFilterChange,\n  query,\n  handleClearSearch,\n  handleInput,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedFilter}\n            onChange={handleFilterChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  handleCloseButton: () => void;\n  selectedUserId: number;\n  todo: Todo | null;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  handleCloseButton,\n  selectedUserId,\n  todo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isUserLoaded, setIsUserLoaded] = useState(true);\n\n  const getUserFromServer = async () => {\n    try {\n      const user = await getUser(selectedUserId);\n\n      setSelectedUser(user);\n      setIsUserLoaded(false);\n    } catch (error) {\n      throw new Error('Something went wrong. Try again later, please');\n    }\n  };\n\n  useEffect(() => {\n    getUserFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isUserLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseButton}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nfunction getVisibleTodos(todos: Todo[], filterType: string, query: string): Todo[] {\n  return todos.filter(todo => {\n    const lowerQuery = query.toLowerCase();\n    const lowerTitle = todo.title.toLowerCase();\n\n    switch (filterType) {\n      case 'all':\n        if (query) {\n          return lowerTitle.includes(lowerQuery);\n        }\n\n        return todo;\n\n      case 'active':\n        if (query) {\n          return lowerTitle.includes(lowerQuery) && !todo.completed;\n        }\n\n        return !todo.completed;\n\n      case 'completed':\n        if (query) {\n          return lowerTitle.includes(lowerQuery) && todo.completed;\n        }\n\n        return todo.completed;\n\n      default:\n        throw new Error('Invalid filter selected');\n    }\n  });\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isTodosLoaded, setIsTodosLoaded] = useState(true);\n  const [idOfSelectedTodo, setIdOfSelectedTodo] = useState(0);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedFilter, setSelectedFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const selectedTodo = todos.find(todo => todo.id === idOfSelectedTodo) || null;\n\n  const getTodosFromServer = async () => {\n    try {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n      setIsTodosLoaded(false);\n    } catch (error) {\n      throw new Error('Something went wrong. Try again later, please');\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  const visibleTodos = useMemo(() => getVisibleTodos(todos, selectedFilter, query), [todos, selectedFilter, query]);\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedFilter(event.target.value);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleClearSearch = () => {\n    setQuery('');\n  };\n\n  const handleSelect = (todoId: number, userId: number) => {\n    setIdOfSelectedTodo(todoId);\n    setSelectedUserId(userId);\n  };\n\n  const handleCloseButton = () => {\n    setIdOfSelectedTodo(0);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                selectedFilter={selectedFilter}\n                handleFilterChange={handleFilterChange}\n                handleClearSearch={handleClearSearch}\n                handleInput={handleInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isTodosLoaded && <Loader />}\n\n              {todos.length > 0 && (\n                <TodoList\n                  todos={visibleTodos}\n                  todoId={idOfSelectedTodo}\n                  handleSelect={handleSelect}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {idOfSelectedTodo && (\n        <TodoModal\n          handleCloseButton={handleCloseButton}\n          selectedUserId={selectedUserId}\n          todo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}